"use strict";define("dummy/acceptance-tests/main",["exports","ember-cli-sri/acceptance-tests/main"],function(e,t){e["default"]=t["default"]}),define("dummy/app",["exports","ember","ember/resolver","ember/load-initializers","dummy/config/environment"],function(e,t,n,o,a){var r;t["default"].MODEL_FACTORY_INJECTIONS=!0,r=t["default"].Application.extend({modulePrefix:a["default"].modulePrefix,podModulePrefix:a["default"].podModulePrefix,Resolver:n["default"]}),o["default"](r,a["default"].modulePrefix),e["default"]=r}),define("dummy/components/bing-component",["exports","ember","dummy/templates/components/bing-component"],function(e,t,n){function o(){return 181*Math.random()-90}function a(){return 281*Math.random()-180}e["default"]=t["default"].Component.extend({layout:n["default"],lat:0,lng:0,zoom:1,mapTypeId:"r",markers:[{lat:o(),lng:a()}],polygonLocation:{location1:{lat:o(),lng:a()},location2:{lat:o(),lng:a()},location3:{lat:o(),lng:a()},location4:{lat:o(),lng:a()}},fillColor:[Math.floor(250*Math.random()),Math.floor(250*Math.random()),Math.floor(250*Math.random()),Math.floor(250*Math.random())],strokeColor:[Math.floor(250*Math.random()),Math.floor(250*Math.random()),Math.floor(250*Math.random()),Math.floor(250*Math.random())]})}),define("dummy/components/bing-map",["exports","ember","dummy/config/environment"],function(e,t,n){e["default"]=t["default"].Component.extend({classNames:["bing-map"],lat:0,lng:0,zoom:10,mapTypeId:"r",markers:null,fillColor:null,strokeColor:null,polygonLocation:null,init:function(){if(this._super(),!n["default"].bingAPI)throw"Missing BING API KEY";this.api=Microsoft.Maps,this.map=null},didInsertElement:function(){this.createMap()},willDestroyElement:function(){this.removeMap()},center:t["default"].computed("lat","lng",function(){var e=this.get("lat"),t=this.get("lng"),n=new Microsoft.Maps.Location(e,t);return n}),mapOptions:t["default"].computed("center","zoom","mapTypeId",function(){var e=this.getProperties("center","zoom","mapTypeId");return e.credentials=n["default"].bingAPI,e}),createMap:function(){var e=this,t=this.$()[0],n=this.get("mapOptions"),o=this.get("getMarker"),a=this.get("createPolygon");this.map=new Microsoft.Maps.Map(t,n),o&&o.forEach(function(t){var n=new Microsoft.Maps.Pushpin(t);e.map.entities.push(n)}),a&&this.map.entities.push(a)},removeMap:function(){this.map.dispose()},getMarker:t["default"].computed(function(){var e=this;if(!this.markers)return null;var t=function(){var t=[];return e.get("markers").forEach(function(e){var n=e.lat,o=e.lng;t.push(new Microsoft.Maps.Location(n,o))}),{v:t}}();return"object"==typeof t?t.v:void 0}),createPolygon:t["default"].computed(function(){var e=this.get("polygonLocation");if(this.polygonLocation){var t=new Microsoft.Maps.Location(e.location1.lat,e.location1.lng),n=new Microsoft.Maps.Location(e.location2.lat,e.location2.lng),o=new Microsoft.Maps.Location(e.location3.lat,e.location3.lng),a=new Microsoft.Maps.Location(e.location4.lat,e.location4.lng),r=new Array(t,n,o,a,t),l=this.get("fillColor"),i=this.get("strokeColor");l&&i?(l=new Microsoft.Maps.Color(l[0],l[1],l[2],l[3]),i=new Microsoft.Maps.Color(i[0],i[1],i[2],i[3])):(l=new Microsoft.Maps.Color(100,100,0,100),i=new Microsoft.Maps.Color(100,100,0,100));var u=new Microsoft.Maps.Polygon(r,{fillColor:l,strokeColor:i});return u}return null})})}),define("dummy/controllers/array",["exports","ember"],function(e,t){e["default"]=t["default"].Controller}),define("dummy/controllers/object",["exports","ember"],function(e,t){e["default"]=t["default"].Controller}),define("dummy/initializers/export-application-global",["exports","ember","dummy/config/environment"],function(e,t,n){function o(e,o){if(n["default"].exportApplicationGlobal!==!1){var a,r=n["default"].exportApplicationGlobal;a="string"==typeof r?r:t["default"].String.classify(n["default"].modulePrefix),window[a]||(window[a]=o,o.reopen({willDestroy:function(){this._super.apply(this,arguments),delete window[a]}}))}}e.initialize=o,e["default"]={name:"export-application-global",initialize:o}}),define("dummy/instance-initializers/app-version",["exports","dummy/config/environment","ember"],function(e,t,n){var o=n["default"].String.classify,a=!1;e["default"]={name:"App Version",initialize:function(e){if(!a){var r=o(e.toString());n["default"].libraries.register(r,t["default"].APP.version),a=!0}}}}),define("dummy/router",["exports","ember","dummy/config/environment"],function(e,t,n){var o=t["default"].Router.extend({location:n["default"].locationType});o.map(function(){}),e["default"]=o}),define("dummy/templates/application",["exports"],function(e){e["default"]=Ember.HTMLBars.template(function(){return{meta:{revision:"Ember@1.13.6",loc:{source:null,start:{line:1,column:0},end:{line:3,column:0}},moduleName:"dummy/templates/application.hbs"},arity:0,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var t=e.createDocumentFragment(),n=e.createComment("");e.appendChild(t,n);var n=e.createTextNode("\n");e.appendChild(t,n);var n=e.createComment("");e.appendChild(t,n);var n=e.createTextNode("\n");return e.appendChild(t,n),t},buildRenderNodes:function(e,t,n){var o=new Array(2);return o[0]=e.createMorphAt(t,0,0,n),o[1]=e.createMorphAt(t,2,2,n),e.insertBoundary(t,0),o},statements:[["content","bing-component",["loc",[null,[1,0],[1,18]]]],["content","outlet",["loc",[null,[2,0],[2,10]]]]],locals:[],templates:[]}}())}),define("dummy/templates/components/bing-component",["exports"],function(e){e["default"]=Ember.HTMLBars.template(function(){return{meta:{revision:"Ember@1.13.6",loc:{source:null,start:{line:1,column:0},end:{line:4,column:0}},moduleName:"dummy/templates/components/bing-component.hbs"},arity:0,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var t=e.createDocumentFragment(),n=e.createElement("div");e.setAttribute(n,"style","position: relative; width: 700px; height: 700px");var o=e.createTextNode("\n");e.appendChild(n,o);var o=e.createComment("");e.appendChild(n,o);var o=e.createTextNode("\n");e.appendChild(n,o),e.appendChild(t,n);var n=e.createTextNode("\n");return e.appendChild(t,n),t},buildRenderNodes:function(e,t,n){var o=new Array(1);return o[0]=e.createMorphAt(e.childAt(t,[0]),1,1),o},statements:[["inline","bing-map",[],["lat",["subexpr","@mut",[["get","lat",["loc",[null,[2,15],[2,18]]]]],[],[]],"lng",["subexpr","@mut",[["get","lng",["loc",[null,[2,23],[2,26]]]]],[],[]],"zoom",["subexpr","@mut",[["get","zoom",["loc",[null,[2,32],[2,36]]]]],[],[]],"mapTypeId",["subexpr","@mut",[["get","mapTypeId",["loc",[null,[2,47],[2,56]]]]],[],[]],"markers",["subexpr","@mut",[["get","markers",["loc",[null,[2,65],[2,72]]]]],[],[]],"polygonLocation",["subexpr","@mut",[["get","polygonLocation",["loc",[null,[2,89],[2,104]]]]],[],[]],"fillColor",["subexpr","@mut",[["get","fillColor",["loc",[null,[2,115],[2,124]]]]],[],[]],"strokeColor",["subexpr","@mut",[["get","strokeColor",["loc",[null,[2,137],[2,148]]]]],[],[]]],["loc",[null,[2,0],[2,150]]]]],locals:[],templates:[]}}())}),define("dummy/config/environment",["ember"],function(e){var t="dummy";try{var n=t+"/config/environment",o=e["default"].$('meta[name="'+n+'"]').attr("content"),a=JSON.parse(unescape(o));return{"default":a}}catch(r){throw new Error('Could not read config from meta tag with name "'+n+'".')}}),runningTests?require("dummy/tests/test-helper"):require("dummy/app")["default"].create({name:"ember-cli-bing-map",version:"1.1.1+115cda19"});