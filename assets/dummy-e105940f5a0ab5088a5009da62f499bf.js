"use strict";define("dummy/app",["exports","ember","dummy/resolver","ember-load-initializers","dummy/config/environment"],function(e,t,n,o,i){var a=void 0;t.default.MODEL_FACTORY_INJECTIONS=!0,a=t.default.Application.extend({modulePrefix:i.default.modulePrefix,podModulePrefix:i.default.podModulePrefix,Resolver:n.default}),(0,o.default)(a,i.default.modulePrefix),e.default=a}),define("dummy/components/bing-component",["exports","ember","dummy/templates/components/bing-component"],function(e,t,n){function o(){return 181*Math.random()-90}function i(){return 281*Math.random()-180}e.default=t.default.Component.extend({layout:n.default,lat:0,lng:0,zoom:1,mapTypeId:"r",markers:[{lat:o(),lng:i()}],polygonLocation:{location1:{lat:o(),lng:i()},location2:{lat:o(),lng:i()},location3:{lat:o(),lng:i()},location4:{lat:o(),lng:i()}},fillColor:[Math.floor(250*Math.random()),Math.floor(250*Math.random()),Math.floor(250*Math.random()),Math.floor(250*Math.random())],strokeColor:[Math.floor(250*Math.random()),Math.floor(250*Math.random()),Math.floor(250*Math.random()),Math.floor(250*Math.random())]})}),define("dummy/components/bing-map",["exports","ember","dummy/config/environment"],function(e,t,n){e.default=t.default.Component.extend({classNames:["bing-map"],lat:0,lng:0,zoom:10,mapTypeId:"r",markers:null,fillColor:null,strokeColor:null,polygonLocation:null,init:function(){if(this._super(),!n.default.bingAPI)throw"Missing BING API KEY";this.api=Microsoft.Maps,this.map=null},didInsertElement:function(){this.createMap()},willDestroyElement:function(){this.removeMap()},center:t.default.computed("lat","lng",function(){var e=this.get("lat"),t=this.get("lng");return new Microsoft.Maps.Location(e,t)}),mapOptions:t.default.computed("center","zoom","mapTypeId",function(){var e=this.getProperties("center","zoom","mapTypeId");return e.credentials=n.default.bingAPI,e}),createMap:function(){var e=this,t=this.$()[0],n=this.get("mapOptions"),o=this.get("getMarker"),i=this.get("createPolygon");this.map=new Microsoft.Maps.Map(t,n),o&&o.forEach(function(t){var n=new Microsoft.Maps.Pushpin(t);e.map.entities.push(n)}),i&&this.map.entities.push(i)},removeMap:function(){this.map.dispose()},getMarker:t.default.computed(function(){var e=this;if(!this.markers)return null;var t=function(){var t=[];return e.get("markers").forEach(function(e){var n=e.lat,o=e.lng;t.push(new Microsoft.Maps.Location(n,o))}),{v:t}}();return"object"==typeof t?t.v:void 0}),createPolygon:t.default.computed(function(){var e=this.get("polygonLocation");if(this.polygonLocation){var t=new Microsoft.Maps.Location(e.location1.lat,e.location1.lng),n=new Microsoft.Maps.Location(e.location2.lat,e.location2.lng),o=new Microsoft.Maps.Location(e.location3.lat,e.location3.lng),i=new Microsoft.Maps.Location(e.location4.lat,e.location4.lng),a=new Array(t,n,o,i,t),r=this.get("fillColor"),l=this.get("strokeColor");r&&l?(r=new Microsoft.Maps.Color(r[0],r[1],r[2],r[3]),l=new Microsoft.Maps.Color(l[0],l[1],l[2],l[3])):(r=new Microsoft.Maps.Color(100,100,0,100),l=new Microsoft.Maps.Color(100,100,0,100));return new Microsoft.Maps.Polygon(a,{fillColor:r,strokeColor:l})}return null})})}),define("dummy/helpers/app-version",["exports","ember","dummy/config/environment","ember-cli-app-version/utils/regexp"],function(e,t,n,o){function i(e){var t=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];return t.hideSha?a.match(o.versionRegExp)[0]:t.hideVersion?a.match(o.shaRegExp)[0]:a}e.appVersion=i;var a=n.default.APP.version;e.default=t.default.Helper.helper(i)}),define("dummy/helpers/pluralize",["exports","ember-inflector/lib/helpers/pluralize"],function(e,t){e.default=t.default}),define("dummy/helpers/singularize",["exports","ember-inflector/lib/helpers/singularize"],function(e,t){e.default=t.default}),define("dummy/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","dummy/config/environment"],function(e,t,n){var o=n.default.APP,i=o.name,a=o.version;e.default={name:"App Version",initialize:(0,t.default)(i,a)}}),define("dummy/initializers/container-debug-adapter",["exports","ember-resolver/container-debug-adapter"],function(e,t){e.default={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0];e.register("container-debug-adapter:main",t.default),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("dummy/initializers/data-adapter",["exports","ember"],function(e,t){e.default={name:"data-adapter",before:"store",initialize:function(){}}}),define("dummy/initializers/ember-data",["exports","ember-data/setup-container","ember-data/-private/core"],function(e,t,n){e.default={name:"ember-data",initialize:t.default}}),define("dummy/initializers/export-application-global",["exports","ember","dummy/config/environment"],function(e,t,n){function o(){var e=arguments[1]||arguments[0];if(n.default.exportApplicationGlobal!==!1){var o;if("undefined"!=typeof window)o=window;else if("undefined"!=typeof global)o=global;else{if("undefined"==typeof self)return;o=self}var i,a=n.default.exportApplicationGlobal;i="string"==typeof a?a:t.default.String.classify(n.default.modulePrefix),o[i]||(o[i]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete o[i]}}))}}e.initialize=o,e.default={name:"export-application-global",initialize:o}}),define("dummy/initializers/injectStore",["exports","ember"],function(e,t){e.default={name:"injectStore",before:"store",initialize:function(){}}}),define("dummy/initializers/store",["exports","ember"],function(e,t){e.default={name:"store",after:"ember-data",initialize:function(){}}}),define("dummy/initializers/transforms",["exports","ember"],function(e,t){e.default={name:"transforms",before:"store",initialize:function(){}}}),define("dummy/instance-initializers/ember-data",["exports","ember-data/-private/instance-initializers/initialize-store-service"],function(e,t){e.default={name:"ember-data",initialize:t.default}}),define("dummy/resolver",["exports","ember-resolver"],function(e,t){e.default=t.default}),define("dummy/router",["exports","ember","dummy/config/environment"],function(e,t,n){var o=t.default.Router.extend({location:n.default.locationType,rootURL:n.default.rootURL});o.map(function(){}),e.default=o}),define("dummy/services/ajax",["exports","ember-ajax/services/ajax"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/templates/application",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"xeYPUrEJ",block:'{"statements":[["append",["unknown",["bing-component"]],false],["text","\\n"],["append",["unknown",["outlet"]],false],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',meta:{moduleName:"dummy/templates/application.hbs"}})}),define("dummy/templates/components/bing-component",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"d7ZJW7yY",block:'{"statements":[["open-element","div",[]],["static-attr","style","position: relative; width: 700px; height: 700px"],["flush-element"],["text","\\n  "],["append",["helper",["bing-map"],null,[["lat","lng","zoom","mapTypeId","markers","polygonLocation","fillColor","strokeColor"],[["get",["lat"]],["get",["lng"]],["get",["zoom"]],["get",["mapTypeId"]],["get",["markers"]],["get",["polygonLocation"]],["get",["fillColor"]],["get",["strokeColor"]]]]],false],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',meta:{moduleName:"dummy/templates/components/bing-component.hbs"}})}),define("dummy/config/environment",["ember"],function(e){try{var t=document.querySelector('meta[name="dummy/config/environment"]').getAttribute("content"),n=JSON.parse(unescape(t)),o={default:n};return Object.defineProperty(o,"__esModule",{value:!0}),o}catch(e){throw new Error('Could not read config from meta tag with name "dummy/config/environment".')}}),runningTests||require("dummy/app").default.create({name:"ember-cli-bing-map",version:"1.2.0+16260726"});